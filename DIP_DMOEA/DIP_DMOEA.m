function res= DIP_DMOEA(Problem,popSize,MaxIt,T_parameter,group)
res = cell(1,floor(T_parameter(group,3)/T_parameter(group,2)));
nt = T_parameter(group,1);
Tt = T_parameter(group,2);
for T = 1:floor(T_parameter(group,3)/T_parameter(group,2))
        t = 1/T_parameter(group,1)*(T-1);
        fprintf(' %d',T);
        
        if T <= 2
            [~,Pareto,POF_iter] = moead(Problem,popSize,MaxIt,t);
            All_POS{T} = Pareto.X;
            All_POF{T} = Pareto.F;
        else
            [initPop,his_POS,curr_POS,pre_Pop] = DIP_prediction(All_POS{T-1}',All_POF{T-1}',All_POS{T-2}',All_POF{T-2}',Problem,popSize);
          
            initPop = unique(initPop','rows','stable')';
            pre_Pop = unique(pre_Pop','rows','stable')';
            LastPOS = unique(All_POS{T-1}','rows','stable')';
            
            % if size of initPop (generated by DIP) smaller than popsize, 
            % solutions generated by ANN will add into the initPop
            initPop = [initPop pre_Pop LastPOS];
            if size(initPop,2)>popSize
                initPop = initPop(:,1:popSize);
            end
        [~,Pareto,POF_iter] = moead(Problem,popSize,MaxIt,t,initPop);  
        All_POS{T} = Pareto.X;
        All_POF{T} = Pareto.F;
        
        end
        res{T}.turePOF=getBenchmarkPOF(Problem.Name,group,T,T_parameter );
        res{T}.POF_iter=POF_iter;
        res{T}.POS=Pareto.X;
end
end





                    